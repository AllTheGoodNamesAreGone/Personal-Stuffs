#My solutions are commented just below every function.



window.fancy = jQuery.noConflict(true);
/*
Here fancy wrks as $. noConfict() 
is a way to allow other libraries
to be used alongwith jquery

*/



function getfancyrWindow() {
return document.getElementById("fancyr-window").contentWindow;
}
/*
"fancyr-window" is an iframe
is an iframe and .contentWindow is used to
return the window object generated by iframe element. 
contentWindow returns a reference to window object.
To use it we write var x=DOM.contentWindow;
then var y=x.document returns reference to document object.
and now we can access document elements.
*/



function getDomainHost(fullUrl) {
return fullUrl.match("(https?:)?(\/\/.*?)/")[2];
}
/*
This function returns the hostname of taken Url,
regex is used to find 1st element of array
returned by match() object.
if match not found it returns NULL. 


*/
function getDomain() {
var scripts = document.body.getElementsByTagName('script');
for (var i = scripts.length-1; i >= 0; i++) {
var script = scripts[i];
if (script.getAttribute('src').indexOf('yourx.js') != -1) {
return getDomainHost(script.getAttribute('src'));
}
}
}
/*
Note: There is some bug here, why i++ ??
      This way scripts[i] will never pick up array elements.
-----> Correctinng the question
This function is accessing the 'src' attribute of 
script tag. It finds the 'yourx.js' as substring in src.
if find it returns the fullUrl of source to function
getDomainHost()

*/


var domain = getDomain();
/*
calling function getDomain()
and instantiating the call in the object domain.
P.S:If i am saying so many objects.
Javascript is nothing other than objects.

*/



var url = window.location.href;
/*
url stores the url of current page
as location.href returns current url
*/



url = url.replace("#!/","");
/*
One reason i know about:
including (#!) in urls is a way to make
ajax application crawlable for SEO by google.
Example:
Current URL= www.example.com/ajax.html#key=value
Correct URL= www.example.com/ajax.html#!key=value

By adding this relationship to your URLs it
will now become SEO friendly and Google 
will pay attention to the information following the !. 
*/




if (typeof(fancyr_init) == 'undefined') {
var fancyr_init = {iframe: false, iframeLoaded: false};
}checkStatus();
/*
Here we check if fancyr_init is undefined.
if so,  properties iframe and iframeLoaded are set false.


*/





function checkStatus() {
if (!fancyr_init.iframe) {
fancy.pm.bind("close", function(data) {
closeyourx();
});
openyourx();
}
}
/*
if iframe is false
then a function is bound with the close 
event(may be defined in some other file/library) 
of ajax (here pm works like ajax i guess..) 
which calls closeyourx()


*/





function openyourx() {
fancyr_init.iframe = true;
if (fancy("body")[0].tagName === "BODY") {
var yourxTarget = fancy("body");
} else {
var yourxTarget = fancy("html"); // For websites with framesets
}

yourxTarget.append("\<div id='fancyr_frame'>\<style type='text/css'>\#fancyr_frame iframe { background: transparent; border:0;position: fixed; top: 0px; right: 20px; height: 600px; width:230px; z-index: 2147483647; margin: 0px; display: block !important;visibility: visible !important; }\</style>\<iframe id=\"fancyr-window\" ALLOWTRANSPARENCY=\"true\"name=\"fancyr-window\" frameborder=\"0\" src=\""+domain+"/yourx?url="+encodeURIComponent(url)+"\" scrolling=\"no\"onload=\"iframeLoaded()\" onreadystatechange=\"iframeLoaded()\">EnableiFrames.</iframe>\</div>");

fancy.pm.bind("action", receiveAction);
fancy.pm.bind("yourxSize", updateSize);
}
/*
This function sets the iframe property
of fancyr_init to true;
then checks whether framesets are used or not.
If not then Body is chosen as container otherwise
Html is chosen as container.

An Iframe is appended to the required container with styling and all.

To make browser understand an improper URL, we use another method.
The encodeURIComponent() function encodes a URI component like this:
http%3A%2F%2Fabc.com%2Fmy%20test.asp%3Fname%3Dst%C3%A5le%26car%3Dsaab

*/






function tuneBrowserDetection() {
var userAgent = navigator.userAgent.toLowerCase();
fancy.browser.chrome = /chrome/.test(navigator.userAgent.toLowerCase());
// Is this a version of Chrome?
if(fancy.browser.chrome){
userAgent = userAgent.substring(userAgent.indexOf('chrome/') +7);
userAgent = userAgent.substring(0,userAgent.indexOf('.'));fancy.browser.version = userAgent;
// If it is chrome then jQuery thinks it's safari so we have to tell it it isn't
fancy.browser.safari = false;
}
if(fancy.browser.safari){
userAgent = userAgent.substring(userAgent.indexOf('safari/') +7);
userAgent = userAgent.substring(0,userAgent.indexOf('.'));
fancy.browser.version = userAgent;
}
}
/*
Here we check versions of browsers chrome and safari,
The userAgent property returns the value of the user-agent 
header sent by the browser to the server.
The value returned, contains information about the name, version and platform of the browser.
Initially this object returned safari in both chrome and safari,but not these days
So we are making fancy.browser.safari =false if jquery thinks its safari.
Note: fancy.browser must be defined somewhere else as its not here in this code.

*/






function iframeLoaded() {
if (!fancyr_init.iframeLoaded) {
fancyr_init.iframeLoaded = true;
// solve safari bug where youtube videos stay above the yourx
tuneBrowserDetection();
if (fancy.browser.safari) {
fancy("embed").attr('wmode', 'transparent');
fancy("embed").parent().html(fancy("embed").parent().html());
}
}
}

/*

It set the  iframeLoaded=true and 
then it check the browser by calling tuneBrowserDetection .
In safari the youtube video iframe overlaps the other area
due to greater zIndinxing(i guess).This is a bug. 
It happens because when the iframe is 
loaded it makes the paint engine of browser to rewrite the content.
So to solve this bug, so the wmode attribute of the frame is 
set to transparent and the content of
the frame is rewritten.

*/






var selectionInterval, twitterInterval, imagesInterval;

function receiveAction(action) {
if (action == "clipping") {
// Selection
sendSelection();
selectionInterval = setInterval(checkSelection, 300);
// Twitter
if (getDomainHost(url).match('twitter.com')) {
twitterInterval = setInterval(setTwitterButtons, 1000);
}
imagesInterval = setInterval(setImagesOverlay, 1000);
setImagesOverlay();
setImagesClickHandler();
} else {
clearInterval(selectionInterval);
clearInterval(twitterInterval);
removeTwitterButtons();
clearInterval(imagesInterval);
removeImagesOverlay();
}
}
/*
If the action is “clipping” then the function checkSelection
is put under interval of 300 ms . that is , it is called every 
time%300 millisecond. If the domainname is twitter then setTwitterButton 
function is called at the duration of every 1 s. the function 
setImageOverlag is called at every 1 s.
else all the above interval are cleared and removeTwitterButton() 
and removeImageOverlay() functions are called. 

*/




function updateSize(yourxDimensions) {
fancy("#fancyr-window").width(yourxDimensions.width).height(yourxDimensions.height +8);
}
/*
It just updates the dimension of iframe
whose id="fancyr-window"
*/



function hasLoaded() {
return fancyr_init.iframeLoaded;
}
/*
returns true if the iframe is loaded 
 
*/





function closeyourx() {
receiveAction('closing');
fancyr_init.iframe = false;
fancyr_init.iframeLoaded = false;
fancy("#fancyr_frame iframe").slideUp(500);
fancy("body").unbind('mouseup mousedown');
if (fancy().delay) {
fancy('#fancyr_frame').delay(600).remove();
} else {
fancy('#fancyr_frame').remove();
}
}
/* P.S: I m getting bit bored now explaining these.. Forgive me:

All the connection to the iframes are closed.
Calls the function recieveAction(“closing”). 
Thus all the interval , buttons, image overlays are cleared. 
Both the properties of fancyr_init is set to false. 
Jquery  function slideup is used to slide up the iframe window. 
Mouseup and mousedown eventHandlers are unbind from body and 
the the element with fancy_frame as id is removed with a delay 
of 600 ms if delay is possible. Else removed directly. 
checkSelection() gets the selected html content through 
getSelectionHMTL() function and  then calls the function 
sendSelection .. ( used for sending data by ajax). The 
lastest selection is stored in lastSelection variable. 
This function is set into interval of 300ms by openyourx 
function ,thus every 300ms the selected html content 
is transferred to sendSelection function .


*/


var lastSelection = '<null>';
var SELECTION_MAX_SIZE = 100000;

function checkSelection() {
if (!hasLoaded()) return;
var selection = getSelectionHTML();
if (selection != lastSelection) {
lastSelection = selection;
sendSelection();
}
}
/*
This function works like this:
Gets the selected html content through getSelectionHMTL() 
function and  then calls the function sendSelection .. 
( used for sending data by ajax). The lastest selection 
is stored in lastSelection variable. This function is set 
into interval of 300ms by openyourx function , thus 
every 300ms the selected html content is 
transferred to sendSelection function .

*/



function sendSelection() {
var data = {
url: url,
title: document.title,
selection: lastSelection
};
if (data.selection.length > SELECTION_MAX_SIZE) data.selection =
data.selection.substring(0,SELECTION_MAX_SIZE);fancy.pm({
target: getfancyrWindow(),
url: domain+"/yourx",
type: "selection",
data: data
});
}
/*

We create here an object called data.
we send it by the ajax request (fancy.pm ) 
to the url – url and target is set to the iframe window. 
It the length of the selection is more than max length 
then it is truncated to the max length.  The selection object
 is returned by this function. ( different way for fetching 
selection object in different browser.
(getSelection in chrome , selection in IE and others))


*/

var getSelectedText = function(){
var t = '';
if(window.getSelection){
t = window.getSelection();
}else if(document.getSelection){
t = document.getSelection();
}else if(document.selection){
t = document.selection.createRange().text;
}
return t;
}
/*






*/
function getSelectionHTML() {
var userSelection;
if (window.getSelection) {
userSelection = window.getSelection ();
// Get the range:
if (userSelection.getRangeAt) {
if (userSelection.rangeCount > 0)
var range = userSelection.getRangeAt(0);
else
return '';
} else {
var range = document.createRange ();
range.setStart (userSelection.anchorNode, userSelection.anchorOffset);
range.setEnd (userSelection.focusNode, userSelection.focusOffset);
}
var clonedSelection = range.cloneContents ();
var div = document.createElement ('div');
div.appendChild (clonedSelection);
return div.innerHTML;
} else if (document.selection) {
// Explorer selection, return the HTML
try {userSelection = document.selection.createRange ();
return userSelection.htmlText;
} catch (err) {
return '';
}
} else {
return '';
}
}
/*
returns the string of selected html on the webpage.
If chrome is used – window.getSelection is true  . 
the object window.getSelection() is stored in the 
variable  userSelection. If userSelection.getRangeAt 
is defined then range = userSelection.getRangeAt[0] 
else the range is created. Starting with properties of 
userSelection anchorNode( the node at which the selection 
starts.mouse is pressed)  and anchorOffset(the prefix 
of anchorNode which is not selected) and ending with 
focusNode( the node at which the mouse is released) and
focusOffset(the prefix of the focus node which is selected.) 
this content is cloned to anthor element which is futhur 
append to a div whose innerHTML futhur on gives the message. 
(so much of pain just the convert object into string. 
We can directly use toString function to get the selection text.)
if IE is used- selection objects range textHTML return 
the selected text. Document.selection.createRange() – range of selection..
textHTML of range gives the selection string.


*/

function setTwitterButtons() {
if (!hasLoaded()) return;
// Add buttons
fancy('.tweet').not(':has(.sm-lock)').find('.stream-item-footer').not(':has(.fancyr-clip-tweet)').each(function() {
fancy('.context',this).after(fancy('<a href="#" class="fancyr-clip-tweet details">Cliptweet</a>').css('color','#D03737').css('verticalalign','middle')
.css('padding-right', '6px')
.css('font-weight','bold')
);
);

// Set buttons callback
fancy('.tweet .fancyr-clip-tweet').die('click').live('click',
function() {
var tweet = fancy(this).parents('.tweet');
var data = {
tweet_id: tweet.attr('data-tweet-id'),
tweet_author: tweet.attr('data-screen-name')
}
fancy.pm({
target: getfancyrWindow(),
url: domain+"/yourx",
type: "clip-tweet",
data: data
});
});
) }


/*
if the iframe hasn’t loaded then return. 
otherwise add twitter button after the element with class name 
( tweet ,context, stream-item-footer ) and !(sm_lock , fancyr-clip-tweet)
and add css to this button trough jquery.
Event onclick is added to the button which triggers a 
function  that collects the tweet of that button and 
its topic and encapsulates it into an object named 
data which is send to the iframe url trough ajax . 

*/




function removeTwitterButtons() {
fancy('.tweet .fancyr-clip-tweet').remove();}
/*
removes all the twitter button with class name tweet 
and fancyr- clip-tweet using juery remove function. 
*/



function blockedWebsite() {
return url.match('flickr\.com/photos/.+?/.+?/') ||
url.match('google\..{2,4}/images') ||
url.match('scribd\.com/doc') ||
url.match(/((http:\/\/(itunes\.apple\.com\/.*))|(https:\/\/(itunes\.apple\.com\/.*)))/i) ||
}
/*

checks whether the url are blocked or not. 
Checking is done for certioan url’s where 
the url are compared against certain regex 
satisfying the particular url which are blocked.

*/


function blockedImageUrl(imageSrc) {
return imageSrc.match('google\.com/vt/lyrs') ||
imageSrc.match('google\.com/kh/') ||
imageSrc.match('maps\.gstatic\.com') ||
imageSrc.match('ytimg\.com') ||
imageSrc.match('googleapis');
}
/*

check whether the img src are blocked or not. 
Checking is done is the same manner in which the
 blocked websites are checked. But regex corresponds 
to different url’s where image’s are blocked.

*/


var fancyrImageCount = 0;

function setImagesOverlay() {
if (!hasLoaded()) return;
if (blockedWebsite()) return;
var images = fancy('img').filter(function () {
return fancy(this).height() > 128 && fancy(this).width() > 128 &&
fancy(this).is(":visible");
});
updateImagesOverlay();
images.each(function () {
var image = fancy(this);
if (!image.attr('data-image-id')) {
var imageSrc = image.get(0).src;
if (blockedImageUrl(imageSrc)) return;
var div = fancy('<div />');
fancy("body").prepend(div);
var maxZindex = 2147483646;
var imageZindex = parseInt(image.css('z-index'));
if (isNaN(imageZindex)) {
var zindex = maxZindex;
} else {
var zindex = imageZindex + 1;if (imageZindex >= maxZindex) {
image.css('z-index', maxZindex - 1);
}
}
if (zindex == 1 && fancy.browser.msie) zindex = maxZindex; // IE
doesn't distinguish between z-index: auto and 0
if (fancy('#tumblr_lightbox').size() > 0)
fancy('#tumblr_lightbox').css('z-index',maxZindex-1);
div.attr('style','\
position: absolute !important;\
color: white !important;\
z-index: '+zindex+';\
word-wrap: no-wrap;\
');
div.attr('class','clip-image-overlay')
.html('<a href="#" data-image-id="'+fancyrImageCount+'" data-
image-src="'+imageSrc+'" class="fancyr-clip-image">Clip image</a>')
.offset(image.offset())
.show();
image.attr('data-image-id', fancyrImageCount);
var a = fancy("a",div);
a.attr('style', '\
position: absolute !important;\
margin: 5px !important;\
width: 74px !important;\
text-align: center !important;\
color: white !important;\
font-family: \"Helvetica Neue\",Helvetica,Arial,sans-serif !
important;\
font-size: 14px !important;\
font-weight: normal !important;\
font-style: normal !important;\
line-height: 18px !important;\
letter-spacing: normal !important;\
padding: 4px 8px !important;\
background-color: #D03737 !important;\
background-image: -webkit-linear-gradient(top,transparent,rgba(0, 0,
0, 0.05)) !important;\
background-image: -moz-linear-gradient(top,transparent,rgba(0,
0, 0, 0.05)) !important;\background-image: linear-gradient(top,#EE5F5B,#BD362F) !
important;\
background-repeat: repeat-x !important;\
border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0,
0, 0.25) !important;\
border-radius: 3px !important;\
text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.25) !important;\
box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.8),0 1px 1px
rgba(0, 0, 0, 0.25) !important;\
text-decoration: none !important;\
');
fancyrImageCount += 1;
}
});
}
/*

If iframe is not loaded or if website is blocked then return.Otherwise,
All the images are filtered which has height and weight more
than 128 and is in the visible mode. 


*/

function setImagesClickHandler() {
fancy('div.clip-image-overlay').die("click").live('click',
function() {
var imageSrc = fancy(this).children('a[data-image-src]').attr('data-
image-src');
fancy.pm({
target: getfancyrWindow(),
url: domain+"/yourx",
type: "clip-image",
data: {imageSrc:imageSrc}
});
return false;
});
}
/*
In this function,
event onclick on image are added. 
Onclicking a  function is called  
which sends the image data 
trough ajax to the url domain+”/yourx”;


*/
function removeImagesOverlay() {
fancy('div.clip-image-overlay').each(function(){
var div = fancy(this);
var imageId = fancy('a[data-image-id]',this).attr('data-image-
id');
fancy("img[data-image-id=" + imageId + "]").removeAttr('data-
image-id');
div.remove();
});
}
/*

It removes all the div where each image is
appended,and the attributes are removed.


*/


function updateImagesOverlay() {
fancy('div.clip-image-overlay').each(function(){var imageId = fancy('a[data-image-id]',this).attr('data-image-
id');
var image = fancy("img[data-image-id=" + imageId + "]");
if (image.length == 0) {
fancy(this).remove();
} else {
var imageOffset = image.offset();
var currentOffset = fancy(this).offset();
var pad = 2;
if (imageOffset.top > currentOffset.top + pad || imageOffset.top
currentOffset.top - pad ||
imageOffset.left > currentOffset.left + pad || imageOffset.left <
currentOffset.left - pad ) {
fancy(this).offset(imageOffset);
}
fancy('a[data-image-id]', this).attr('data-image-src',
image.get(0).src);
}
});
}

/*
It update the context of each image . 
the various image.setOff  is called. 
For each image selected 
if the attribute and  the styling of 
the image div is added and the class of the image is set.


*/
